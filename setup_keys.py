#!/usr/bin/env python3
"""
Configurador interativo de API Keys
"""
import os
from dotenv import load_dotenv

def setup_api_keys():
    """Configura API Keys interativamente"""
    
    print("üîß Configurador de API Keys Binance")
    print("="*40)
    print()
    
    print("üìã Escolha uma op√ß√£o:")
    print("1. üß™ Testnet (para testes - dinheiro falso)")
    print("2. üè¶ Mainnet (produ√ß√£o - dinheiro real)")
    print()
    
    choice = input("Digite sua escolha (1 ou 2): ").strip()
    
    if choice == "1":
        print("\nüß™ Configurando TESTNET")
        print("üîó Crie suas chaves em: https://testnet.binance.vision/")
        testnet = True
    elif choice == "2":
        print("\nüè¶ Configurando MAINNET")
        print("‚ö†Ô∏è  ATEN√á√ÉO: Use apenas dinheiro que pode perder!")
        print("üîó Crie suas chaves em: https://www.binance.com/en/my/settings/api-management")
        testnet = False
    else:
        print("‚ùå Op√ß√£o inv√°lida!")
        return False
    
    print("\nüìù Instru√ß√µes para criar API Key:")
    print("1. Acesse o link acima")
    print("2. Fa√ßa login na sua conta")
    print("3. V√° em 'API Key' (ou 'API Management')")
    print("4. Clique em 'Create API Key'")
    print("5. Configure as permiss√µes:")
    print("   ‚úÖ Enable Reading")
    print("   ‚úÖ Enable Spot & Margin Trading")
    print("   ‚ùå Enable Withdrawals (DESMARCADO)")
    print("6. IP Restriction: deixe em branco ou adicione seu IP")
    print("7. Copie API Key e Secret")
    
    input("\n‚è≥ Pressione Enter quando tiver criado as chaves...")
    
    print("\nüîë Cole sua API Key:")
    api_key = input("> ").strip()
    
    if not api_key:
        print("‚ùå API Key n√£o pode estar vazia!")
        return False
    
    print("\nüîê Cole seu API Secret:")
    api_secret = input("> ").strip()
    
    if not api_secret:
        print("‚ùå API Secret n√£o pode estar vazio!")
        return False
    
    # Criar arquivo .env
    env_content = f"""# Configura√ß√µes da API Binance
API_KEY={api_key}
API_SECRET={api_secret}
TESTNET={str(testnet)}

# Configura√ß√µes de risco
RISK_REWARD_RATIO=4.0
STOP_LOSS_RATIO=3.0
CAPITAL_PROTECTION_THRESHOLD=0.85
MAX_DAILY_LOSS=0.05
MAX_RISK_PER_TRADE=0.02

# Configura√ß√µes de trading
TIMEFRAMES=15m,1h,4h
MIN_VOLUME_USDT=1000000
MAX_POSITIONS=3

# Par√¢metros de indicadores t√©cnicos
RSI_PERIOD=14
MACD_FAST=12
MACD_SLOW=26
MACD_SIGNAL=9
BB_PERIOD=20
BB_STD=2.0

# Configura√ß√µes de an√°lise
MIN_CONFIDENCE=0.6
MAX_SPREAD=0.5

# Configura√ß√µes do ambiente
DEBUG_MODE=False

# Configura√ß√µes do servidor web
WEB_HOST=0.0.0.0
WEB_PORT=5000
"""
    
    try:
        with open('.env', 'w') as f:
            f.write(env_content)
        print("\n‚úÖ Arquivo .env criado com sucesso!")
    except Exception as e:
        print(f"\n‚ùå Erro criando .env: {e}")
        return False
    
    # Testar conex√£o
    print("\nüß™ Testando conex√£o...")
    os.system("python test_api.py")
    
    return True

if __name__ == "__main__":
    success = setup_api_keys()
    if success:
        print("\nüéâ Configura√ß√£o conclu√≠da!")
        print("üöÄ Execute: python main.py")
    else:
        print("\n‚ùå Configura√ß√£o falhou. Tente novamente.")